generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
}

model Sessao {
  SesToken                  String @id
  SesEmprCodigo             Int
  Empresa                   Empresas @relation(fields: [SesEmprCodigo], references: [EmprCodigo])
  Carrinho                  Carrinho[]
  expiresAt                 DateTime?
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
} 
  
model Empresas {  
  EmprCodigo                Int @id @default(autoincrement())
  EmprNome                  String
  EmprCNPJ                  String @unique
  EmprLink                  String @unique
  EmprLogotipo              Bytes
  EmprImagemCabecalho       Bytes   
  EmprEndereco              String
  EmprNumero                String
  EmprBairro                String
  EmprCidade                String
  EmprInicioExpediente      DateTime? @db.Time
  EmprFimExpediente         DateTime? @db.Time
  CorSite                   String
  EmprEstado                String
  EmprTelefone              String
  EmprDivisaoSabores        Boolean
  Sessoes                   Sessao[]
  Grupos                    Grupos[]
  Produtos                  Produtos[]
  Carrinho                  Carrinho[]
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
}

model Grupos {
  GrupID                    Int @id @default(autoincrement())
  GrupCodigo                Int
  GrupDescricao             String
  GrupEmpresa               Int
  Empresa                   Empresas @relation(fields: [GrupEmpresa], references: [EmprCodigo])
  Produtos                  Produtos[]
  GrupoTipo                 GrupoTipo[]
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
} 

model Produtos {  
  ProdID                    Int @id @default(autoincrement())
  ProdGrupo                 Int
  ProdEmpresa               Int
  ProdCodigo                Int
  ProdEspecificacoes        String
  ProdDescricao             String
  ProdValor                 Decimal
  ProdHoraInicial           DateTime? @db.Time
  ProdHoraFinal             DateTime? @db.Time
  ProdClassificacao         Int
  Grupo                     Grupos @relation(fields: [ProdGrupo], references: [GrupID])
  Empresa                   Empresas @relation(fields: [ProdEmpresa], references: [EmprCodigo])
  ValoresTipo               ProdutoValoresTipo[]
  CarrinhoItens             CarrinhoItens[]
  Complementos              Complemento[]
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
}

model GrupoTipo {
  GrTpID                    Int @id @default(autoincrement())
  GrTpGrupoID               Int
  GrTpDescricao             String
  GrTpDivisao               Int
  Grupo                     Grupos @relation(fields: [GrTpGrupoID], references: [GrupID])
  ProdutoValoresTipo        ProdutoValoresTipo[]
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
}

model ProdutoValoresTipo {
  PrVtID                    Int @id @default(autoincrement())
  PrVtProdID                Int
  PrVtGrTpID                Int
  PrVtValor                 Decimal
  Produto                   Produtos @relation(fields: [PrVtProdID], references: [ProdID])
  GrupoTipo                 GrupoTipo @relation(fields: [PrVtGrTpID], references: [GrTpID])
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
}

model Carrinho {
  CarID                     Int @id @default(autoincrement())
  CarDataHora               DateTime
  CarDescricao              String
  CarValorTotal             Decimal
  CarEmpresa                Int
  CarQtd                    Int?
  CarTaxaEntrega            Decimal
  CarSesToken               String
  Empresa                   Empresas @relation(fields: [CarEmpresa], references: [EmprCodigo])
  Sessao                    Sessao @relation(fields: [CarSesToken], references: [SesToken], onDelete: Cascade)
  CarrinhoItens             CarrinhoItens[]
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
}

model CarrinhoItens {
  CarItensID                Int @id @default(autoincrement())
  CarItensCarrrinhoID       Int
  CarItensProdID            Int
  CarItensQuantidade        Decimal
  CarItensValorUnitario     Decimal
  CarItensValorProdutos     Decimal
  CarItensObservacoes       String
  CarItensComplemento       Decimal
  CarItensValorTotalGeral   Decimal
  CarItensAgrupamento       String
  Carrinho                  Carrinho @relation(fields: [CarItensCarrrinhoID], references: [CarID], onDelete: Cascade)
  Produto                   Produtos @relation(fields: [CarItensProdID], references: [ProdID])
  Complemento               Complemento[]
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
}

model Complemento {
  CompID                    Int @id @default(autoincrement())
  CompQuantidade            Decimal
  CompProdID                Int
  CompCarID                 Int
  Carrinho                  CarrinhoItens @relation(fields: [CompCarID], references: [CarItensID], onDelete: Cascade)
  Produto                   Produtos @relation(fields: [CompProdID], references: [ProdID])
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
}

model Pedido {
  id                        String       @id @default(uuid())
  empresa                   String
  empresaTelefone           String
  dataHora                  DateTime
  totalPedido               Decimal
  taxaEntrega               Decimal
  formaPagamento            String
  clienteNome               String
  clienteCep                String
  clienteTroco              Decimal?
  clienteEndereco           String
  clienteNumero             String
  clienteComplemento        String
  clienteBairro             String
  clienteCidade             String
  clienteEstado             String
  clienteTelefone           String
  status                    Int
  dataHoraImportacao        DateTime
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
  itens                     PedidoItem[]
}

model PedidoItem {
  id                        Int       @id @default(autoincrement())
  pedidoId                  String
  pedido                    Pedido    @relation(fields: [pedidoId], references: [id])
  produto                   String
  quantidade                Decimal
  grupoTipo                 Boolean
  valorUnitario             Decimal
  valorProduto              Decimal
  observacoes               String
  totalComplementos         Decimal
  valorTotal                Decimal
  nomeAgrupamento           String
  agrupamento               Decimal
  quantidadeAgrupamento     Decimal
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
  complementos              PedidoItemComplemento[]
}

model PedidoItemComplemento {
  id                        Int       @id @default(autoincrement())
  pedidoItemId              Int
  pedidoItem                PedidoItem @relation(fields: [pedidoItemId], references: [id])
  produtoComplemento        String
  quantidadeComplemento     Int
  valorUnitarioComplemento  Decimal
  valorTotalComplemento     Decimal
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt
}


