generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
}

model Sessao {
  SesToken String @id
  SesEmprCodigo Int
  Empresa Empresas @relation(fields: [SesEmprCodigo], references: [EmprCodigo])
  Carrinho Carrinho[]
  expiresAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Empresas {
  EmprCodigo Int @id @default(autoincrement())
  EmprNome String
  EmprCNPJ String @unique
  EmprLink String @unique
  EmprLogotipo Bytes
  EmprImagemCabecalho Bytes
  EmprEndereco String
  EmprNumero String
  EmprBairro String
  EmprCidade String
  CorSite String
  EmprEstado String
  EmprTelefone String
  EmprDivisaoSabores Boolean
  Sessoes Sessao[]
  Grupos Grupos[]
  Produtos Produtos[]
  Carrinho Carrinho[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Grupos {
  GrupID Int @id @default(autoincrement())
  GrupCodigo Int
  GrupDescricao String
  GrupEmpresa Int
  Empresa Empresas @relation(fields: [GrupEmpresa], references: [EmprCodigo])
  Produtos Produtos[]
  GrupoTipo GrupoTipo[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Produtos {
  ProdID Int @id @default(autoincrement())
  ProdGrupo Int
  ProdEmpresa Int
  ProdCodigo Int
  ProdEspecificacoes String
  ProdDescricao String
  ProdValor Decimal
  ProdHoraInicial DateTime
  ProdHoraFinal DateTime
  ProdClassificacao Int
  Grupo Grupos @relation(fields: [ProdGrupo], references: [GrupID], onDelete: Cascade)
  Empresa Empresas @relation(fields: [ProdEmpresa], references: [EmprCodigo])
  ValoresTipo ProdutoValoresTipo[]
  CarrinhoItens CarrinhoItens[]
  Complementos Complemento[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model GrupoTipo {
  GrTpID Int @id @default(autoincrement())
  GrTpGrupoID Int
  GrTpDescricao String
  GrTpDivisao Int
  Grupo Grupos @relation(fields: [GrTpGrupoID], references: [GrupID], onDelete: Cascade)
  ProdutoValoresTipo ProdutoValoresTipo[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model ProdutoValoresTipo {
  PrVtID Int @id @default(autoincrement())
  PrVtProdID Int
  PrVtGrTpID Int
  PrVtValor Decimal
  Produto Produtos @relation(fields: [PrVtProdID], references: [ProdID], onDelete: Cascade)
  TipoGrupo GrupoTipo @relation(fields: [PrVtGrTpID], references: [GrTpID])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Carrinho {
  CarID Int @id @default(autoincrement())
  CarDataHora DateTime
  CarValorTotal Decimal
  CarEmpresa Int
  CarTaxaEntrega Decimal
  CarSesToken String
  Empresa Empresas @relation(fields: [CarEmpresa], references: [EmprCodigo])
  Sessao Sessao @relation(fields: [CarSesToken], references: [SesToken], onDelete: Cascade)
  CarrinhoItens CarrinhoItens[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model CarrinhoItens {
  CarItensID Int @id @default(autoincrement())
  CarItensCarrrinhoID Int
  CarItensProdID Int
  CarItensQuantidade Decimal
  CarItensValorUnitario Decimal
  CarItensValorProdutos Decimal
  CarItensObservacoes String
  CarItensComplemento Decimal
  CarItensValorTotalGeral Decimal
  CarItensAgrupamento String
  Carrinho Carrinho @relation(fields: [CarItensCarrrinhoID], references: [CarID], onDelete: Cascade)
  Produto Produtos @relation(fields: [CarItensProdID], references: [ProdID])
  Complemento Complemento[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Complemento {
  CompID Int @id @default(autoincrement())
  CompQuantidade Decimal
  CompProdID Int
  CompCarID Int
  Carrinho CarrinhoItens @relation(fields: [CompCarID], references: [CarItensID])
  Produto Produtos @relation(fields: [CompProdID], references: [ProdID], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
